!function(){"use strict";function t(t){n.motionHandler(t)}function o(t){n.orientationHandler(t)}var n={options:{collecting:!1,totaltime:1e3,totalcount:20},motion:{orientation:[],acceleration:[],accelerationIncludingGravity:[],rotationRate:[]},start:function(){this.options.collecting=!0,this.motion={orientation:[],acceleration:[],accelerationIncludingGravity:[],rotationRate:[]};var t=this;setTimeout(function(){t.options.collecting=!1},this.options.totaltime)},getData:function(){return this.motion},orientationHandler:function(t){!this.options.collecting||this.motion.orientation.length>this.options.totalcount||this.motion.orientation.push({alpha:t.alpha,beta:t.beta,gamma:t.gamma,webkitCompassHeading:t.webkitCompassHeading,webkitCompassAccuracy:t.webkitCompassAccuracy})},motionHandler:function(t){if(this.options.collecting&&!(this.motion.acceleration.length>this.options.totalcount)){var o=t.acceleration,n=t.accelerationIncludingGravity,i=t.rotationRate;this.motion.acceleration.push({x:o.x,y:o.y,z:o.z}),this.motion.accelerationIncludingGravity.push({x:n.x,y:n.y,z:n.z}),this.motion.rotationRate.push({alpha:i.alpha,beta:i.beta,gamma:i.gamma})}},initSensor:function(){window.addEventListener("devicemotion",t,!1),window.addEventListener("deviceorientation",o,!1)},destroySensor:function(){this.options.collecting=!1,window.removeEventListener("devicemotion",t),window.removeEventListener("deviceorientation",o)}};"object"==typeof exports?module.exports=n:"function"==typeof define&&define.amd?define([],function(){return n}):window&&(window.sensor=n)}(jQuery,window,document);